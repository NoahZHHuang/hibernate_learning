<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.noah</groupId>
  <artifactId>hibernate_learning</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <dependency>
	  <groupId>junit</groupId>
	  <artifactId>junit</artifactId>
	  <version>4.8.1</version>
	  <scope>test</scope>
	</dependency>
		
	<dependency>
	  <groupId>org.hibernate</groupId>
	  <artifactId>hibernate-core</artifactId>
	  <version>5.2.10.Final</version>	
	</dependency>
	 <!-- 
		# Hibernate 4.2 and backwards, use jpa 2.0 
	    # Hibernate 4.3 and onwards, use jpa 2.1. 
	    # So hibernate-core 5.2.10.Final is using jpa 2.1 
	    # If jpa annotations are used in you pojo and it throws "ClassNotFoundException:javax.persistence.Converter" error
	      when running your code. It is probably caused by some indirect dependencies use the jpa 2.0. 
	      Please run the "mvn dependency:tree", find out which dependency it is and exclude it. Or add below direct dependency  
	      <dependency>
    	  	<groupId>org.eclipse.persistence</groupId>
    	  	<artifactId>javax.persistence</artifactId>
       	  	<version>2.1.0</version>
	  	  </dependency>
	-->
		
	<dependency>
	  <groupId>org.postgresql</groupId>
	  <artifactId>postgresql</artifactId>
      <version>42.1.1</version>
	</dependency>
	   
	</dependencies>
</project>
